generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  email       String @unique
  phoneNumber String
  speciality String?

  role         UserRole
  password     String
  profileImage String?

  userStatus UserStatus @default(ACTIVE)
  isDeleted  Boolean    @default(false)

  otp           Int?
  otpExpiry     DateTime?
  emailVerified Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Shift {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  role        String
  location    String
  date        DateTime
  startTime   String
  endTime     String
  payAmount   Float
  vacancy     Int      @default(1)
  description String
  isUrgent    Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BookShift {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  userId  String @db.ObjectId
  shiftId String @db.ObjectId
  status  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AssignWorker {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  organizerId String @db.ObjectId
  bookShiftId String @db.ObjectId
  status      String
  isPaid      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
  USER
  ORGANIZER
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum NotificationType {
  ORDER
  PAYMENT
  BOOKING
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED // The shift has been worked and is finished.
  CANCELLED
}
